---
import { getEntry, type CollectionEntry } from "astro:content";
import BaseHead from "../components/Common/BaseHead.astro";
import Footer from "../components/Common/Footer.astro";
import Search from "../components/Search/Search.astro";
import ProjectDetails from "../components/Projects/ProjectDetails.astro";
import { getEntries } from "astro:content";
import dayjs from "dayjs";

type Props = CollectionEntry<"projects"> & {
  date: Date | null;
  reports: CollectionEntry<"user_reports">[];
};

type TextField<T> = {
  key: keyof T;
  value: T[keyof T];
  type: "text";
};

export type ProjectFields = (
  | TextField<
      Omit<typeof data, "name" | "icon" | "categories" | "link" | "type">
    >
  | {
      key: "category";
      value: typeof categoriesData;
      type: "array";
    }
  | { key: "link"; type: "link"; value: string }
)[];

const { data, render, date, reports } = Astro.props;

const { Content } = await render();

// extract special fields
const { link, icon, name, categories, type } = data;

// get category data from references
const categoriesData = await getEntries(categories);

// extract non-special text fields
const textFields = Object.entries(data).filter(
  ([key]) => !["icon", "name", "categories", "link", "type"].includes(key)
);

// construct field array from text and special fields
const fields = [
  ...textFields.map((field) => ({
    key: field[0],
    value: field[1],
    type: "text",
  })),
  {
    key: "link",
    value: link,
    type: "link",
  },
  {
    key: "category",
    value: categoriesData,
    type: "array",
  },
] as ProjectFields;

// sort fields
const sortOrder = ["compatibility", "category", "versionFrom", "link", "notes"];

const sortKeys = sortOrder.reduce((obj: any, item: string, index: number) => {
  return {
    ...obj,
    [item]: index,
  };
}, {});

fields.sort((a, b) => sortKeys[a.key] - sortKeys[b.key]);

// list filtering fields
const filters = ["category", "compatibility", "type"];
---

<html lang="en">
  <head>
    <BaseHead
      title={name + " | Windows on Arm Ready Applications"}
      description={`Windows on Arm compatibility details for ${name}`}
    />
  </head>

  <body class="min-h-screen flex flex-col">
    <main class="max-w-5xl mx-auto px-2 sm:px-5 w-full">
      <Search shouldRedirect={true} type={type} />
      <section
        data-pagefind-body
        class="flex flex-col items-center p-1 sm:pb-10 pt-0"
      >
        <h1 class="font-bold text-3xl px-0 self-start">
          {name}
        </h1>
        <span class="hidden" data-pagefind-sort="name"
          >{name.toLowerCase()}</span
        >
        <ProjectDetails
          fields={fields}
          icon={icon}
          filters={filters}
          Content={Content}
          name={name}
          type={type}
        />
        <p class="w-full py-6">
          Last updated {
            import.meta.env.SSR ? (
              <i>- not available on private staging site</i>
            ) : (
              date?.toLocaleDateString("en-gb", {
                year: "numeric",
                month: "long",
                day: "numeric",
              })
            )
          }
        </p>
      </section>
      <section class="mb-8">
        <h2 class="px-0 text-xl">User Reports</h2>
        <ul class="flex flex-col gap-4">
          {
            reports.map(({ data }) => (
              <li class="w-full p-5 bg-white text-black rounded-xl">
                <ul class="grid grid-cols-2 gap-y-8">
                  <li>
                    <b>Device Configuration</b>
                    <p>{data.device_configuration}</p>
                  </li>
                  <li>
                    <b>Date Tested</b>
                    <p>{dayjs(data.date_tested).format("YYYY-MM-DD")}</p>
                  </li>
                  <li>
                    <b>Compatibility Details</b>
                    <p>{data.compatibility_details}</p>
                  </li>
                  <li>
                    <b>Overall Status</b>
                    <p>{data.overall_status}</p>
                  </li>
                </ul>
              </li>
            ))
          }
        </ul>
      </section>
    </main>

    <Footer />
  </body>
</html>
